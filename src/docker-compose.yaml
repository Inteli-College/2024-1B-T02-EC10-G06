version: '2'
services:
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.4.4
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - 22181:2181
  
  # kafka:
  #   image: confluentinc/cp-kafka:7.4.4
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 29092:29092
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   restart: on-failure

  # kafka2:
  #   image: confluentinc/cp-kafka:7.4.4
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #   ports:
  #     - 29093:29093
  #   environment:
  #     KAFKA_BROKER_ID: 2
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093,PLAINTEXT_HOST://localhost:29093
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   restart: on-failure

  # kafka3:
  #   image: confluentinc/cp-kafka:7.4.4
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #     - kafka2
  #   ports:
  #     - 29094:29094
  #   environment:
  #     KAFKA_BROKER_ID: 3
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094,PLAINTEXT_HOST://localhost:29094
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   restart: on-failure
  # kafka-connect:
  #   build:
  #     context: .
  #     dockerfile: kafka_connect/dockerfile
  #   container_name: kafka-connect
  #   environment:
  #     CONNECT_BOOTSTRAP_SERVERS: kafka:9092,kafka2:9002,kafka3:9092 # Update with your Kafka broker address
  #     CONNECT_GROUP_ID: "kafka-connect-group"
  #     CONNECT_CONFIG_STORAGE_TOPIC: "kafka-connect-configs"
  #     CONNECT_OFFSET_STORAGE_TOPIC: "kafka-connect-offsets"
  #     CONNECT_STATUS_STORAGE_TOPIC: "kafka-connect-status"
  #     CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
  #     CONNECT_PLUGIN_PATH: "/usr/share/java/kafka/"  
  #   ports:
  #     - "8083:8083"  # Expose Kafka Connect REST API
  #   # volumes:
  #   #   - /path/to/your/plugin/directory:/usr/share/java/kafka/  # If you have custom connectors
  #   #   - /path/to/your/config/directory:/etc/kafka/  # If you have custom configurations
  #   depends_on:
  #     - kafka
  #     - kafka2
  #     - kafka3
  #     - zookeeper
  #   restart: on-failure

  # redis:
  #   container_name: redis_server
  #   image: redislabs/redisearch
  #   restart: always
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - /path/to/local/d–∞ta:/root/redis
  #     - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
  #   environment:
  #     - REDIS_PASSWORD=password
  #     - REDIS_PORT=6379
  #     - REDIS_DATABASES=16
  #     - USERNAME=user

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: backend
    ports:
      - "5001:5001"

  auth:
    build:
      context: .
      dockerfile: auth/Dockerfile
    container_name: auth
    ports:
      - "8001:8001"
    
